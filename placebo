usage() {
  echo "Usage: . $0 [-h]"
  return 1
}
[ "$1" == "-h" ] && usage

attach_usage() {
  echo "Usage: pill_attach aws data_path=DATA_PATH [-spy]"
  echo "e.g. pill_attach aws data_path=shunit2/fixtures/aws.sh -spy"
  return 1
}

pill_attach() {
  echo $2 | grep -q = || attach_usage
  DATA_PATH=$(echo $2 | cut -f2 -d=)
  [ "$3" == "-spy" ] && SPY=true || SPY=false
}

pill_playback() {
  PILL=playback
}

pill_record() {
  PILL=record
}

create_new() {
  local f=$1
  echo 'case "aws $*" in' > $f
}

update_existing() {
  local f=$1
  awk '/^esac/{exit}{print}' $f > $f.bak
  mv $f.bak $f
}

record() {
  local f=$1
  local com=$2
  local sub=$3
  shift ; shift ; shift

  [ -e $f ] && \
    update_existing $f || \
    create_new $f

  cat >> $f <<EOD
'aws $com $sub $*')
  cat <<'EOF'
EOD

  command aws $com $sub $* | \
    tee -a $f

  cat >> $f <<'EOD'
EOF
  ;;
esac
EOD
}

aws() {
  local com=$1
  local sub=$2
  shift ; shift

  if [ -z $PILL ] ; then
    echo "PILL must be set to playback or record"
    return 1
  fi

  if [ -z $DATA_PATH ] ; then
    echo "DATA_PATH must be set"
    return 1
  fi

  mkdir -p $(dirname $DATA_PATH)

  [ "$SPY" == true ] && \
    echo "aws $com $sub $*" >> commands_log

  case "$PILL" in
  "playback")
    source $DATA_PATH $com $sub $*
    ;;
  "record")
    record $DATA_PATH $com $sub $*
    ;;
  esac
}

# vim: ft=sh
